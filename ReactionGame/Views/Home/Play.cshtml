
@{
    ViewBag.Title = "Play";
}

<h2>Play</h2>
<div>
    <input type="hidden" id="playerName" />
    <ul id="listOfPlayers"></ul>
    <div id="clickTarget" style="width:200px;height:200px">

    </div>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            var $connection = $.connection;
            var $gameHub = $connection.reactionGameHub;
            // Create a function that the hub can call back to display messages.
            $gameHub.client.updateListOfPlayers = function (players) {
                var $listOfPlayers = $('#listOfPlayers');
                $listOfPlayers.empty();
                $.each(players, function (index, player) {
                    var playerInfo = htmlEncode(player.Name) + ': ' + player.Points;
                    playerInfo = player.Id == $gameHub.connection.id ? '<b>' + playerInfo + '</b>' : playerInfo;
                    $listOfPlayers.append('<li>' + playerInfo + '</li>');
                });                
            };

            $gameHub.client.updateGameStatus = function (status) { updateGameStatus(status) };
            // Get the user name and store it to prepend to messages.
            $('#playerName').val(prompt('Enter your name:', ''));
            // Start the connection.
            $connection.hub.start().done(function () {
                // Call the Send method on the hub.
                $gameHub.server.join($('#playerName').val());           
            });
        });

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function updateGameStatus(status){            
            var color;
            switch (status) {
                case "GetReady": color = '#ffff00'; break;
                case "Go": color = '#00ff00'; break;
                case "Stop": color = '#ff0000'; break;
                default: color = '#000000'; break;
            }
            var $clicktarget = $('#clickTarget');
            $clicktarget.css('background-color', color);
        }
    </script>
}